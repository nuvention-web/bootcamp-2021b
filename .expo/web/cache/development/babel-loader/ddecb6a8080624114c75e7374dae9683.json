{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/caitlinwen/CS-473/bootcamp-2021b/App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Agenda } from 'react-native-calendars';\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      items: {}\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 7\n        }\n      }, React.createElement(Agenda, {\n        items: this.state.items,\n        loadItemsForMonth: this.loadItems.bind(this),\n        selected: '2017-05-16',\n        renderItem: this.renderItem.bind(this),\n        renderEmptyDate: this.renderEmptyDate.bind(this),\n        rowHasChanged: this.rowHasChanged.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 9\n        }\n      }));\n    }\n  }, {\n    key: \"loadItems\",\n    value: function loadItems(day) {\n      var _this2 = this;\n\n      setTimeout(function () {\n        for (var i = -15; i < 85; i++) {\n          var time = day.timestamp + i * 24 * 60 * 60 * 1000;\n\n          var strTime = _this2.timeToString(time);\n\n          if (!_this2.state.items[strTime]) {\n            _this2.state.items[strTime] = [];\n            var numItems = Math.floor(Math.random() * 5);\n\n            for (var j = 0; j < numItems; j++) {\n              _this2.state.items[strTime].push({\n                name: 'Item for ' + strTime,\n                height: Math.max(50, Math.floor(Math.random() * 150))\n              });\n\n              _this2.state.items[strTime].push({\n                name: 'Item puff for ' + strTime,\n                height: Math.max(50, Math.floor(Math.random() * 150))\n              });\n            }\n          }\n        }\n\n        var newItems = {};\n        Object.keys(_this2.state.items).forEach(function (key) {\n          newItems[key] = _this2.state.items[key];\n        });\n\n        _this2.setState({\n          items: newItems\n        });\n      }, 1000);\n    }\n  }, {\n    key: \"renderItem\",\n    value: function renderItem(item) {\n      return React.createElement(View, {\n        style: [styles.item, {\n          height: item.height\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 58\n        }\n      }, item.name));\n    }\n  }, {\n    key: \"renderEmptyDate\",\n    value: function renderEmptyDate() {\n      return React.createElement(View, {\n        style: styles.emptyDate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 38\n        }\n      }, \"This is empty date!\"));\n    }\n  }, {\n    key: \"rowHasChanged\",\n    value: function rowHasChanged(r1, r2) {\n      return r1.name !== r2.name;\n    }\n  }, {\n    key: \"timeToString\",\n    value: function timeToString(time) {\n      var date = new Date(time);\n      return date.toISOString().split('T')[0];\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  item: {\n    backgroundColor: 'white',\n    flex: 1,\n    borderRadius: 5,\n    padding: 10,\n    marginRight: 10,\n    marginTop: 17\n  },\n  emptyDate: {\n    height: 15,\n    flex: 1,\n    paddingTop: 30\n  },\n  touchableOpacityStyle: {\n    position: 'absolute',\n    width: 50,\n    height: 50,\n    alignItems: 'center',\n    justifyContent: 'center',\n    right: 30,\n    bottom: 30\n  },\n  floatingButtonStyle: {\n    resizeMode: 'contain',\n    width: 50,\n    height: 50\n  }\n});","map":{"version":3,"sources":["/Users/caitlinwen/CS-473/bootcamp-2021b/App.js"],"names":["React","Component","Agenda","App","props","state","items","loadItems","bind","renderItem","renderEmptyDate","rowHasChanged","day","setTimeout","i","time","timestamp","strTime","timeToString","numItems","Math","floor","random","j","push","name","height","max","newItems","Object","keys","forEach","key","setState","item","styles","emptyDate","r1","r2","date","Date","toISOString","split","StyleSheet","create","backgroundColor","flex","borderRadius","padding","marginRight","marginTop","paddingTop","touchableOpacityStyle","position","width","alignItems","justifyContent","right","bottom","floatingButtonStyle","resizeMode"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity, Image} from 'react-native';\nimport {Agenda } from 'react-native-calendars';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: {}\n    };\n  }\n\n  render () {\n    return (\n      <View>\n        <Agenda\n          items={this.state.items}\n          loadItemsForMonth={this.loadItems.bind(this)}\n          selected={'2017-05-16'}\n          renderItem={this.renderItem.bind(this)}\n          renderEmptyDate={this.renderEmptyDate.bind(this)}\n          rowHasChanged={this.rowHasChanged.bind(this)}\n          // markingType={'period'}\n          // markedDates={{\n          //    '2017-05-08': {textColor: '#666'},\n          //    '2017-05-09': {textColor: '#666'},\n          //    '2017-05-14': {startingDay: true, endingDay: true, color: 'blue'},\n          //    '2017-05-21': {startingDay: true, color: 'blue'},\n          //    '2017-05-22': {endingDay: true, color: 'gray'},\n          //    '2017-05-24': {startingDay: true, color: 'gray'},\n          //    '2017-05-25': {color: 'gray'},\n          //    '2017-05-26': {endingDay: true, color: 'gray'}}}\n          // monthFormat={'yyyy'}\n          // theme={{calendarBackground: 'red', agendaKnobColor: 'green'}}\n          //renderDay={(day, item) => (<Text>{day ? day.day: 'item'}</Text>)}\n        />\n        {/*<TouchableOpacity*/}\n        {/*  activeOpacity={0.7}*/}\n        {/*  style={styles.touchableOpacityStyle}>*/}\n        {/*  <Image*/}\n        {/*    // FAB using TouchableOpacity with an image*/}\n        {/*    // For online image*/}\n        {/*    source={{*/}\n        {/*      uri:*/}\n        {/*        'https://raw.githubusercontent.com/AboutReact/sampleresource/master/plus_icon.png',*/}\n        {/*    }}*/}\n        {/*    // For local image*/}\n        {/*    //source={require('./images/float-add-icon.png')}*/}\n        {/*    style={styles.floatingButtonStyle}*/}\n        {/*  />*/}\n        {/*</TouchableOpacity>*/}\n      </View>\n    );\n  }\n\n  loadItems(day) {\n    setTimeout(() => {\n      for (let i = -15; i < 85; i++) {\n        const time = day.timestamp + i * 24 * 60 * 60 * 1000;\n        const strTime = this.timeToString(time);\n        if (!this.state.items[strTime]) {\n          this.state.items[strTime] = [];\n          const numItems = Math.floor(Math.random() * 5);\n          for (let j = 0; j < numItems; j++) {\n            this.state.items[strTime].push({\n              name: 'Item for ' + strTime,\n              height: Math.max(50, Math.floor(Math.random() * 150))\n            });\n            this.state.items[strTime].push({\n              name: 'Item puff for ' + strTime,\n              height: Math.max(50, Math.floor(Math.random() * 150))\n            });\n          }\n        }\n      }\n      //console.log(this.state.items);\n      const newItems = {};\n      Object.keys(this.state.items).forEach(key => {newItems[key] = this.state.items[key];});\n      this.setState({\n        items: newItems\n      });\n    }, 1000);\n    // console.log(`Load Items for ${day.year}-${day.month}`);\n  }\n\n  renderItem(item) {\n    return (\n      <View style={[styles.item, {height: item.height}]}><Text>{item.name}</Text></View>\n    );\n  }\n\n  renderEmptyDate() {\n    return (\n      <View style={styles.emptyDate}><Text>This is empty date!</Text></View>\n    );\n  }\n\n  rowHasChanged(r1, r2) {\n    return r1.name !== r2.name;\n  }\n\n  timeToString(time) {\n    const date = new Date(time);\n    return date.toISOString().split('T')[0];\n  }\n}\n\nconst styles = StyleSheet.create({\n  item: {\n    backgroundColor: 'white',\n    flex: 1,\n    borderRadius: 5,\n    padding: 10,\n    marginRight: 10,\n    marginTop: 17\n  },\n  emptyDate: {\n    height: 15,\n    flex:1,\n    paddingTop: 30\n  },\n  touchableOpacityStyle: {\n    position: 'absolute',\n    width: 50,\n    height: 50,\n    alignItems: 'center',\n    justifyContent: 'center',\n    right: 30,\n    bottom: 30,\n  },\n  floatingButtonStyle: {\n    resizeMode: 'contain',\n    width: 50,\n    height: 50,\n    //backgroundColor:'black'\n  },\n});\n"]},"metadata":{},"sourceType":"module"}